name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  workflow_dispatch:  # Allows manual triggering from GitHub Actions UI

jobs:
  install-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Unshallow the repo so versioningit can access full git history
          fetch-tags: true

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install project with dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          pip freeze
          ls *
          exchange-automator -v

      - name: Run tests (Python 3.8)
        run: |
          pytest --maxfail=5 -q

      - name: Check formatting (Python 3.8)
        run: black --check .

      - name: Lint code (Python 3.8)
        run: ruff src/exchange_automator tests

      - name: Type check (Python 3.8)
        run: mypy src/exchange_automator

      - name: Security check (Python 3.8)
        run: bandit -r src/exchange_automator
