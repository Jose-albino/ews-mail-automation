[build-system]
requires = ["setuptools>=62", "wheel", "versioningit>=3.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "exchange-automator"
version = "0.0.0"
description = "Python package for automating Exchange tasks via EWS"
readme = "Readme.md"
license = { text = "MIT" }
urls = { "Homepage" = "https://github.com/jose-albino/ews-mail-automation" }
authors = [{ name = "Jose Albino", email = "pypi-packages-email.pendant519@passmail.com" }]
requires-python = ">=3.8"
dependencies = [
    "exchangelib",
    "requests"
]

[project.scripts]
exchange-automator = "exchange_automator.cli:main"

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "nox",
    "pre-commit",
    "twine",
    "versioningit>=3.0.0"
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.versioningit]
vcs = "git"

#[tool.versioningit.fields]
#commitid = { method = "git", attr = "commit" }

[tool.versioningit.onbuild]
default-version = "0.0.99versionNotFound"

[tool.versioningit.format]
method = "basic"
format = "{version}"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | dist
  | build
  | __pycache__
)/
'''

[tool.ruff]
line-length = 88
select = ["E", "F", "I"]
ignore = []

[tool.mypy]
python_version = 3.8
strict = true

[tool.pytest.ini_options]
addopts = "--strict-markers --tb=short --cov=exchange_automator --cov-report=term-missing"
testpaths = [
    "tests/unit",
    "tests/integration",
    "tests/system"
]

[tool.coverage.run]
branch = true
source = ["src/exchange_automator"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 60

[tool.coverage.html]
directory = "htmlcov"